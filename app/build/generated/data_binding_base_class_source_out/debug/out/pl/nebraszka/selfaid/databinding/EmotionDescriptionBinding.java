// Generated by view binder compiler. Do not edit!
package pl.nebraszka.selfaid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pl.nebraszka.selfaid.R;

public final class EmotionDescriptionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnEmotionDescribtionBack;

  @NonNull
  public final ScrollView svEmotionDescribtion;

  @NonNull
  public final TextView tvEmotionDescribtion;

  @NonNull
  public final TextView tvEmotionName;

  private EmotionDescriptionBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnEmotionDescribtionBack, @NonNull ScrollView svEmotionDescribtion,
      @NonNull TextView tvEmotionDescribtion, @NonNull TextView tvEmotionName) {
    this.rootView = rootView;
    this.btnEmotionDescribtionBack = btnEmotionDescribtionBack;
    this.svEmotionDescribtion = svEmotionDescribtion;
    this.tvEmotionDescribtion = tvEmotionDescribtion;
    this.tvEmotionName = tvEmotionName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EmotionDescriptionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EmotionDescriptionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.emotion_description, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EmotionDescriptionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEmotionDescribtionBack;
      Button btnEmotionDescribtionBack = ViewBindings.findChildViewById(rootView, id);
      if (btnEmotionDescribtionBack == null) {
        break missingId;
      }

      id = R.id.svEmotionDescribtion;
      ScrollView svEmotionDescribtion = ViewBindings.findChildViewById(rootView, id);
      if (svEmotionDescribtion == null) {
        break missingId;
      }

      id = R.id.tvEmotionDescribtion;
      TextView tvEmotionDescribtion = ViewBindings.findChildViewById(rootView, id);
      if (tvEmotionDescribtion == null) {
        break missingId;
      }

      id = R.id.tvEmotionName;
      TextView tvEmotionName = ViewBindings.findChildViewById(rootView, id);
      if (tvEmotionName == null) {
        break missingId;
      }

      return new EmotionDescriptionBinding((ConstraintLayout) rootView, btnEmotionDescribtionBack,
          svEmotionDescribtion, tvEmotionDescribtion, tvEmotionName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
