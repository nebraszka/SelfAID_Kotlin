// Generated by view binder compiler. Do not edit!
package pl.nebraszka.selfaid.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import pl.nebraszka.selfaid.R;

public final class EmotionJournalEntryBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final Button btnEJAddEmotion;

  @NonNull
  public final Button btnEJDatePicker;

  @NonNull
  public final Button btnEJEmotionInfo;

  @NonNull
  public final Button btnEJSaveEntry;

  @NonNull
  public final EditText etEJTitle;

  @NonNull
  public final RecyclerView rvEJTasks;

  @NonNull
  public final Spinner spnEJEmotions;

  @NonNull
  public final TextView tvChooseEmotion;

  @NonNull
  public final TextView tvChosenEmotion;

  @NonNull
  public final TextView tvEJChosenDate;

  @NonNull
  public final TextView tvEJTitle;

  private EmotionJournalEntryBinding(@NonNull NestedScrollView rootView,
      @NonNull Button btnEJAddEmotion, @NonNull Button btnEJDatePicker,
      @NonNull Button btnEJEmotionInfo, @NonNull Button btnEJSaveEntry, @NonNull EditText etEJTitle,
      @NonNull RecyclerView rvEJTasks, @NonNull Spinner spnEJEmotions,
      @NonNull TextView tvChooseEmotion, @NonNull TextView tvChosenEmotion,
      @NonNull TextView tvEJChosenDate, @NonNull TextView tvEJTitle) {
    this.rootView = rootView;
    this.btnEJAddEmotion = btnEJAddEmotion;
    this.btnEJDatePicker = btnEJDatePicker;
    this.btnEJEmotionInfo = btnEJEmotionInfo;
    this.btnEJSaveEntry = btnEJSaveEntry;
    this.etEJTitle = etEJTitle;
    this.rvEJTasks = rvEJTasks;
    this.spnEJEmotions = spnEJEmotions;
    this.tvChooseEmotion = tvChooseEmotion;
    this.tvChosenEmotion = tvChosenEmotion;
    this.tvEJChosenDate = tvEJChosenDate;
    this.tvEJTitle = tvEJTitle;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static EmotionJournalEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EmotionJournalEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.emotion_journal_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EmotionJournalEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnEJAddEmotion;
      Button btnEJAddEmotion = ViewBindings.findChildViewById(rootView, id);
      if (btnEJAddEmotion == null) {
        break missingId;
      }

      id = R.id.btnEJDatePicker;
      Button btnEJDatePicker = ViewBindings.findChildViewById(rootView, id);
      if (btnEJDatePicker == null) {
        break missingId;
      }

      id = R.id.btnEJEmotionInfo;
      Button btnEJEmotionInfo = ViewBindings.findChildViewById(rootView, id);
      if (btnEJEmotionInfo == null) {
        break missingId;
      }

      id = R.id.btnEJSaveEntry;
      Button btnEJSaveEntry = ViewBindings.findChildViewById(rootView, id);
      if (btnEJSaveEntry == null) {
        break missingId;
      }

      id = R.id.etEJTitle;
      EditText etEJTitle = ViewBindings.findChildViewById(rootView, id);
      if (etEJTitle == null) {
        break missingId;
      }

      id = R.id.rvEJTasks;
      RecyclerView rvEJTasks = ViewBindings.findChildViewById(rootView, id);
      if (rvEJTasks == null) {
        break missingId;
      }

      id = R.id.spnEJEmotions;
      Spinner spnEJEmotions = ViewBindings.findChildViewById(rootView, id);
      if (spnEJEmotions == null) {
        break missingId;
      }

      id = R.id.tvChooseEmotion;
      TextView tvChooseEmotion = ViewBindings.findChildViewById(rootView, id);
      if (tvChooseEmotion == null) {
        break missingId;
      }

      id = R.id.tvChosenEmotion;
      TextView tvChosenEmotion = ViewBindings.findChildViewById(rootView, id);
      if (tvChosenEmotion == null) {
        break missingId;
      }

      id = R.id.tvEJChosenDate;
      TextView tvEJChosenDate = ViewBindings.findChildViewById(rootView, id);
      if (tvEJChosenDate == null) {
        break missingId;
      }

      id = R.id.tvEJTitle;
      TextView tvEJTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvEJTitle == null) {
        break missingId;
      }

      return new EmotionJournalEntryBinding((NestedScrollView) rootView, btnEJAddEmotion,
          btnEJDatePicker, btnEJEmotionInfo, btnEJSaveEntry, etEJTitle, rvEJTasks, spnEJEmotions,
          tvChooseEmotion, tvChosenEmotion, tvEJChosenDate, tvEJTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
